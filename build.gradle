
group 'com.testAutomation'
version '1.0-SNAPSHOT'
apply plugin: 'java'
sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'
    compile group: 'io.appium', name: 'java-client', version: '5.0.0-BETA8'
}

task runInSequence() {
    doLast {
        def arglist = ["-p", "pretty", "-p", "json:${reporting.baseDir}/cucumber/cucumber.json", "--glue", "com.camiloribeiro",
                       "${project.projectDir}/src/main/java/com/camiloribeiro/features"]

        return javaexec {
            main = "cucumber.api.cli.Main"
            classpath = sourceSets.main.runtimeClasspath
            args = arglist
        }
        generateReport()
    }
}

def generateReport() {
    def jsonReports = fileTree(dir: "${reporting.baseDir}/cucumber/").include '**/*.json'.toString()
    File reportOutputDirectory = new File("${reporting.baseDir}/cucumber");

    List<String> jsonReportFiles = new ArrayList<String>();
    jsonReports.each { File file ->
        jsonReportFiles.add("${reporting.baseDir}/cucumber/${file.name}".toString());
    }

    Configuration configuration = new Configuration(reportOutputDirectory, "cucumber-gradle-parallel");
    // optional configuration
    configuration.setParallelTesting(true);
    configuration.setRunWithJenkins(false);
    configuration.setBuildNumber("1988");

    ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, configuration);
    Reportable result = reportBuilder.generateReports();
    println("\nReport available on: ${reporting.baseDir}/cucumber/cucumber-html-reports/overview-features.html")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10' //we want gradle 2.10 to run this project
}
